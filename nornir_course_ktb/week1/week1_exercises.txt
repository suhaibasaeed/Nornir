1. Create a simple inventory that contains just a hosts.yaml file. In this hosts.yaml file add just one device entry. Additionally, for the device entry device just one field 'hostname: localhost'.

Using the Python interpreter shell and the hosts.yaml file that you just created:

    a. Create a Nornir object using InitNornir

    b. Look at nr.inventory

    c. Look at nr.inventory.hosts

    d. Look at nr.inventory.hosts['name'] where 'name' is the name of the entry you created in hosts.yaml.

    e. Look at nr.inventory.hosts['name'].hostname

 

2. Create the following inventory in the hosts.yaml and the groups.yaml files:

    a. The hosts.yaml file should have two hosts.

    b. Each 'host' in the hosts.yaml file should have a hostname.

    c. Each 'host' in the hosts.yaml file should belong to the group 'ios'.

    d. The groups.yaml file should contain the group 'ios' and this group should have the following attributes: platform, username, password, and port.

    e. Create a Python script that uses InitNornir to create a Nornir object using the newly created hosts.yaml and groups.yaml files. Using a for-loop loop over the Nornir hosts in inventory and print out the following attributes for each host: hostname, groups, platform, username, password, and port. Do this directly from the Nornir host objects (i.e. rely on Nornir's ability to search from the host object then to group object).

 

3. Expand on your inventory from exercises to include a defaults.yaml file.

    a. Move both the username and password attributes from the groups.yaml file to the defaults.yaml file.

    b. Re-execute your exercise2e Python script against this new inventory. In other words, verify that your Python for-loop on the Nornir Host Objects properly searches from host, to group, to defaults and prints out the attributes specified in exercise 2e.

 

4. Using the inventory that you created in exercise3:

    a. Create a very simple custom task that prints a string for each host in inventory (there should be two hosts in your inventory at this point). You should use the .run() method to execute your custom task. In its simplest form your custom task can look similar to the following:

def my_task(task):
    print("Hello")
    b. Adding to your custom task, print out the 'task.host.hostname' attribute (from inside the task).

 

5. Expand on your inventory files to include DNS servers. Add a dns1 and a dns2 server to your defaults.yaml file (this should be under the "data" key). These two DNS servers have IP addresses of 1.1.1.1 and 1.0.0.1, respectively. Since these DNS servers are in your defaults.yaml file, you can think of them as the global DNS server that you would use unless you overwrite them at the host or group level. Now for your first host in inventory (in hosts.yaml) add a more specific dns1 server under the "data" key. This DNS server should have an IP address of 8.8.8.8.

Now expand on your custom task from exercise4 and print out the two DNS servers for each host object. The first host object should have dns1=8.8.8.8 and dns2=1.0.0.1 (the first entry from hosts.yaml and the second entry from defaults.yaml). The second host object should have dns1=1.1.1.1 and dns2=1.0.0.1 (where both entries are pulled from defaults.yaml).
